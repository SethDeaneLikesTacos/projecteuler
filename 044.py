import pef
import time
import math
"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of
D?
"""

def is_pentagonal(number):
    maybe_pentagonal =  (math.sqrt(1 + 24 * number) + 1.0) / 6.0
    return maybe_pentagonal == int(maybe_pentagonal)

def main():
    start_time = time.time()

    not_found = True

    i = 1
    while not_found:
        i += 1

        Pn = i * (3 * i - 1) / 2
        for j in range(1, i):
            Pp = j * (3 * j - 1) / 2
            if (is_pentagonal(abs(Pn - Pp)) and is_pentagonal(abs(Pn + Pp))):

                end_time = time.time()
                pef.answer(int(abs(Pn - Pp)), end_time - start_time)
                return


main()
